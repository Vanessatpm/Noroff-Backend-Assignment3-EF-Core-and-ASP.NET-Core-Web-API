// <auto-generated />
using System;
using MediaDatabaseCreator.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediaDatabaseCreator.Migrations
{
    [DbContext(typeof(FilmDbContext))]
    [Migration("20230303105009_addedSeededData")]
    partial class addedSeededData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MediaDatabaseCreator.Model.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterId"));

                    b.Property<string>("Alias")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Gender")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("movieId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            Alias = "Iron Man",
                            FullName = "Tony Stark",
                            Gender = "Male",
                            PictureUrl = "https://www.imdb.com/title/tt0371746/mediaviewer/rm1006248448/",
                            movieId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            Alias = "Captain America",
                            FullName = "Steve Rogers",
                            Gender = "Male",
                            PictureUrl = "https://www.imdb.com/title/tt0458339/mediaviewer/rm2483030016/",
                            movieId = 1
                        },
                        new
                        {
                            CharacterId = 3,
                            Alias = "Thor",
                            FullName = "Thor Odinson",
                            Gender = "Male",
                            PictureUrl = "https://www.imdb.com/title/tt0800369/mediaviewer/rm1346871297/",
                            movieId = 1
                        },
                        new
                        {
                            CharacterId = 4,
                            Alias = "Jedi Knight",
                            FullName = "Luke Skywalker",
                            Gender = "Male",
                            PictureUrl = "https://www.imdb.com/title/tt0076759/mediaviewer/rm2446233600/",
                            movieId = 2
                        },
                        new
                        {
                            CharacterId = 5,
                            Alias = "General Leia Organa",
                            FullName = "Princess Leia Organa",
                            Gender = "Female",
                            PictureUrl = "https://www.imdb.com/title/tt0076759/mediaviewer/rm1222220800/",
                            movieId = 2
                        },
                        new
                        {
                            CharacterId = 6,
                            Alias = "Ring bearer",
                            FullName = "Frodo Baggins",
                            Gender = "Male",
                            PictureUrl = "https://example.com/frodo.jpg",
                            movieId = 3
                        });
                });

            modelBuilder.Entity("MediaDatabaseCreator.Model.Franchise", b =>
                {
                    b.Property<int>("FranchiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FranchiseId"));

                    b.Property<string>("Description")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("FranchiseId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            Description = "A series of superhero films produced by Marvel Studios",
                            Name = "Marvel Cinematic Universe"
                        },
                        new
                        {
                            FranchiseId = 2,
                            Description = "An epic space opera media franchise created by George Lucas",
                            Name = "Star Wars"
                        },
                        new
                        {
                            FranchiseId = 3,
                            Description = "An epic high fantasy novel by J.R.R. Tolkien",
                            Name = "The Lord of the Rings"
                        });
                });

            modelBuilder.Entity("MediaDatabaseCreator.Model.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("MoviePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("MovieTrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<int?>("characterId")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Director = "Anthony Russo, Joe Russo",
                            Genre = "Action, Adventure, Drama",
                            MoviePictureUrl = "https://www.imdb.com/title/tt4154796/mediaviewer/rm1057017345/",
                            MovieTitle = "Avengers: Endgame",
                            MovieTrailerUrl = "https://www.youtube.com/watch?v=TcMBFSGVi1c",
                            ReleaseYear = 2019
                        },
                        new
                        {
                            MovieId = 2,
                            Director = "George Lucas",
                            Genre = "Action, Adventure, Fantasy",
                            MoviePictureUrl = "https://www.imdb.com/title/tt0076759/mediaviewer/rm3500569857/",
                            MovieTitle = "Star Wars: Episode IV - A New Hope",
                            MovieTrailerUrl = "https://www.youtube.com/watch?v=1g3_CFmnU7k",
                            ReleaseYear = 1977
                        },
                        new
                        {
                            MovieId = 3,
                            Director = "Peter Jackson",
                            Genre = "Action, Adventure, Drama",
                            MoviePictureUrl = "https://www.imdb.com/title/tt0120737/mediaviewer/rm3693752064/",
                            MovieTitle = "The Lord of the Rings: The Fellowship of the Ring",
                            MovieTrailerUrl = "https://www.youtube.com/watch?v=V75dMMIW2B4",
                            ReleaseYear = 2001
                        });
                });

            modelBuilder.Entity("MovieCharacter", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("MovieCharacter");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 1,
                            CharacterId = 2
                        },
                        new
                        {
                            MovieId = 2,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 2,
                            CharacterId = 3
                        },
                        new
                        {
                            MovieId = 3,
                            CharacterId = 2
                        },
                        new
                        {
                            MovieId = 3,
                            CharacterId = 3
                        });
                });

            modelBuilder.Entity("MediaDatabaseCreator.Model.Movie", b =>
                {
                    b.HasOne("MediaDatabaseCreator.Model.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MovieCharacter", b =>
                {
                    b.HasOne("MediaDatabaseCreator.Model.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediaDatabaseCreator.Model.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MediaDatabaseCreator.Model.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
